/* === CROPPING MODAL: hidden by default, visible when .modal-visible added === */
#cropping-modal {
    display: none; /* hidden by default */
    position: fixed;
    inset: 0;
    z-index: 3000;
    align-items: center;
    justify-content: center;
    background: rgba(0,0,0,0.75);
}

/* when you want to show the modal add the class "modal-visible" (JS) */
#cropping-modal.modal-visible {
    display: flex;
}

/* modal content default style (you already have many modal-content rules; this ensures dark theme) */
#cropping-modal .modal-content {
    width: 90vw;
    height: 90vh;
    max-width: 1200px;
    max-height: 800px;
    background: var(--bg-color);
    color: var(--text-color);
    border-radius: 10px;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    box-sizing: border-box;
}

/* crop container inside modal */
#crop-container {
    position: relative;
    flex: 1 1 auto;
    min-height: 0;
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
    background: var(--bg-color);
}

#crop-image {
    height: 100%;
    width: auto;
    max-width: 100%;
    object-fit: contain;
}

/* ensure crop rectangle styling exists (kept from your original CSS) */
#crop-rectangle {
    position: absolute;
    border: 2px dashed var(--text-color);
    box-shadow: 0 0 0 9999px rgba(0,0,0,0.5);
    cursor: move;
}

/* modal actions row (footer) */
#cropping-modal .modal-actions {
    display: flex;
    justify-content: flex-end;
    gap: 0.5rem;
    padding: 0.75rem;
    background: var(--header-bg);
    border-top: 1px solid var(--border-color);
}

.crop-handle {
    position: absolute;
    width: 10px;
    height: 10px;
    background-color: var(--text-color);
    border: 1px solid var(--border-color);
}

.crop-handle.nw { top: -5px; left: -5px; cursor: nwse-resize; }
.crop-handle.ne { top: -5px; right: -5px; cursor: nesw-resize; }
.crop-handle.sw { bottom: -5px; left: -5px; cursor: nesw-resize; }
.crop-handle.se { bottom: -5px; right: -5px; cursor: nwse-resize; }